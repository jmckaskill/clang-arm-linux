CFLAGS = $INCLUDES -DNDEBUG -O2 -Wall -Wno-missing-braces
CXXFLAGS = $CFLAGS -std=c++11
LDFLAGS = -lpthread -lm

TGT = cc-release
HOST = cc-release

rule cc
 command = cc -std=c11 -MMD -MF $out.d -c $in -o $out $CFLAGS
 deps = gcc
 depfile = $out.d
 description = CC $in

rule extcc
 command = cc -MMD -MF $out.d -c $in -o $out -g -Wno-deprecated-declarations $EXT_INCLUDES $INCLUDES
 deps = gcc
 depfile = $out.d
 description = CC $in

rule ccdll
 command = cc -std=c11 -fPIC -MMD -MF $out.d -c $in -o $out $CFLAGS -Wall -Werror
 deps = gcc
 depfile = $out.d
 description = CC $in

rule cxx
 command = c++ $CXXFLAGS -MMD -MF $out.d -c $in -o $out
 deps = gcc
 depfile = $out.d
 description = CXX $in

rule cxxdll
 command = c++ $CXXFLAGS -fPIC -MMD -MF $out.d -c $in -o $out
 deps = gcc
 depfile = $out.d
 description = CXX $in

rule lib
 command = ar rcs $out $in
 description = AR $out

rule clinkdll
 command = c++ -shared $in -o $out $LDFLAGS
 description = AR $out

rule clink
 command = cc $in -o $out $LDFLAGS
 description = EXE $out

rule cxxlink
 command = c++ $in -o $out $LDFLAGS
 description = EXE $out

rule js-compile
 command = java -jar $CLOSURE_JAR -O ADVANCED --rewrite_polyfills=false --js_output_file $out $in
 description = JS-COMPILE-ADVANCED $out

include $SRC_NINJA
