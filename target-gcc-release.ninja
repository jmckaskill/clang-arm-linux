CFLAGS = $INCLUDES -DNDEBUG -O2 -D_GNU_SOURCE -Wno-missing-braces -Wno-unused-function -Wno-extended-offsetof -pedantic
CXXFLAGS = $CFLAGS -std=c++11
LDFLAGS = -lpthread

TGT = gcc-release

rule cc
 command = gcc -std=c11 -MMD -MF $out.d -c $in -o $out $CFLAGS
 deps = gcc
 depfile = $out.d
 description = CC $in

rule extcc
 command = gcc -MMD -MF $out.d -c $in -o $out -g $EXT_INCLUDES $INCLUDES
 deps = gcc
 depfile = $out.d
 description = CC $in

rule ccdll
 command = gcc -std=c11 -fPIC -MMD -MF $out.d -c $in -o $out $CFLAGS -Wall -Werror
 deps = gcc
 depfile = $out.d
 description = CC $in

rule cxx
 command = g++ $CXXFLAGS -MMD -MF $out.d -c $in -o $out
 deps = gcc
 depfile = $out.d
 description = CXX $in

rule cxxdll
 command = g++ $CXXFLAGS -fPIC -MMD -MF $out.d -c $in -o $out
 deps = gcc
 depfile = $out.d
 description = CXX $in

rule lib
 command = ar rcs $out $in
 description = AR $out

rule clinkdll
 command = g++ -shared $in -o $out $LDFLAGS
 description = AR $out

rule clink
 command = g++ $in -o $out $LDFLAGS
 description = EXE $out

rule cxxlink
 command = g++ $in -o $out $LDFLAGS
 description = EXE $out

rule js-compile
 command = java -jar $TOOLCHAIN_DIR/closure-compiler.jar -O ADVANCED --rewrite_polyfills=false --js_output_file $out $in
 description = JS-COMPILE $out

include $SRC_NINJA
